name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint-and-build:
    if: github.event_name == 'pull_request'
    name: Lint and Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  build-deploy:
    name: Docker Build and Deploy Google Cloud Deployment
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: dreamfarer
          password: ${{ secrets.GHCR_PAT }}

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Login to Google Artifact Registry (GAR)
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          GHCR_IMAGE="ghcr.io/sopra-fs25-group-20/sopra-fs25-group-20-client:latest"
          GAR_IMAGE="europe-west1-docker.pkg.dev/sopra-fs25-group-20-client/docker-repo/sopra-fs25-group-20-client:latest"
          docker build -f Dockerfile . \
            --tag $GHCR_IMAGE \
            --tag $GAR_IMAGE
          docker push $GHCR_IMAGE
          docker push $GAR_IMAGE

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy spyquest-app \
            --image=europe-west1-docker.pkg.dev/sopra-fs25-group-20-client/docker-repo/sopra-fs25-group-20-client:latest \
            --platform=managed \
            --region=europe-west1 \
            --allow-unauthenticated \
            --port=3000
